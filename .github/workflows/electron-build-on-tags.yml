name: Build for electron windows
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm i
      - name: Build
        run: pnpm electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          pnpm rimraf "dist-electron/electron/!(*.exe)"
      - name: Cleanup Artifacts for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          pnpm rimraf "dist-electron/electron/!(*.dmg)"

              - name: upload artifacts
          uses: actions/upload-artifact@v3.0.0
          with:
            name: ${{ matrix.os }}
            path: dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: dist-electron/electron

      - name: release
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
